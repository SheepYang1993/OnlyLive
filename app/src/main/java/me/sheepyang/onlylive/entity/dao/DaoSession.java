package me.sheepyang.onlylive.entity.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import me.sheepyang.onlylive.entity.Goods;
import me.sheepyang.onlylive.entity.JoinOwnerToGoods;
import me.sheepyang.onlylive.entity.Player;

import me.sheepyang.onlylive.entity.dao.GoodsDao;
import me.sheepyang.onlylive.entity.dao.JoinOwnerToGoodsDao;
import me.sheepyang.onlylive.entity.dao.PlayerDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig goodsDaoConfig;
    private final DaoConfig joinOwnerToGoodsDaoConfig;
    private final DaoConfig playerDaoConfig;

    private final GoodsDao goodsDao;
    private final JoinOwnerToGoodsDao joinOwnerToGoodsDao;
    private final PlayerDao playerDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        goodsDaoConfig = daoConfigMap.get(GoodsDao.class).clone();
        goodsDaoConfig.initIdentityScope(type);

        joinOwnerToGoodsDaoConfig = daoConfigMap.get(JoinOwnerToGoodsDao.class).clone();
        joinOwnerToGoodsDaoConfig.initIdentityScope(type);

        playerDaoConfig = daoConfigMap.get(PlayerDao.class).clone();
        playerDaoConfig.initIdentityScope(type);

        goodsDao = new GoodsDao(goodsDaoConfig, this);
        joinOwnerToGoodsDao = new JoinOwnerToGoodsDao(joinOwnerToGoodsDaoConfig, this);
        playerDao = new PlayerDao(playerDaoConfig, this);

        registerDao(Goods.class, goodsDao);
        registerDao(JoinOwnerToGoods.class, joinOwnerToGoodsDao);
        registerDao(Player.class, playerDao);
    }
    
    public void clear() {
        goodsDaoConfig.getIdentityScope().clear();
        joinOwnerToGoodsDaoConfig.getIdentityScope().clear();
        playerDaoConfig.getIdentityScope().clear();
    }

    public GoodsDao getGoodsDao() {
        return goodsDao;
    }

    public JoinOwnerToGoodsDao getJoinOwnerToGoodsDao() {
        return joinOwnerToGoodsDao;
    }

    public PlayerDao getPlayerDao() {
        return playerDao;
    }

}
